<div class="wrapper">
  <div class="container text-center container-background">
    <div class="container-calendar">
      <div id="calendar"></div>
    </div>
    <!-- イベント情報モーダル -->
    <div class="event-info" id="event-info-modal">
      <h2>イベント情報</h1>
      <div class="row">
        <p class="event-title col-md-4 col-md-offset-1 col-sm-4 col-sm-offset-1">タイトル:</p>
        <p id="event-title-info" class="col-md-6 col-sm-6"></p>
      </div>
      <div class="row">
        <p class="event-start col-md-4 col-md-offset-1 col-sm-4 col-sm-offset-1">開始時刻:</p>
        <p id="event-start-info" class="col-md-6 col-sm-6"></p>
      </div>
      <div class="row">
        <p class="event-end col-md-4 col-md-offset-1 col-sm-4 col-sm-offset-1">終了時刻:</p>
        <p id="event-end-info" class="col-md-6 col-sm-6"></p>
      </div>
    </div>

  </div>
</div>
<script>
$(document).ready(function() {
　// イベントを作成するメソッド
  create_event = function(title, start, end){
    $.ajaxPrefilter(function(options, originalOptions, jqXHR) {
      var token;
      if (!options.crossDomain) {
        token = $('meta[name="csrf-token"]').attr('content');
        if (token) {
          return jqXHR.setRequestHeader('X-CSRF-Token', token);
        }
      }
    });
    $.ajax({
      type: "post",
      url: "/events/create",
      data: {
        title: title,
        start: start.toISOString(),
        end: end.toISOString()
      }
    }).done(function(data){
      alert("登録しました!");
    }).fail(function(data){
      alert("登録できませんでした。");
    });
  };
   // イベントを更新するメソッド
  update_event = function(id, title, start, end){
    $.ajaxPrefilter(function(options, originalOptions, jqXHR) {
      var token;
      if (!options.crossDomain) {
        token = $('meta[name="csrf-token"]').attr('content');
        if (token) {
          return jqXHR.setRequestHeader('X-CSRF-Token', token);
        }
      }
    });

    $.ajax({
      type: "PATCH",
      url: "/events/update",
      data: {
        id: id,
        title: title,
        start: start,
        end: end
      }
    }).done(function(data){
      alert("更新しました!");
    }).fail(function(data){
      alert("更新できませんでした。");
    });
  };
  // イベントを削除するメソッド
  destroy_event = function(id){
    $.ajaxPrefilter(function(options, originalOptions, jqXHR) {
      var token;
      if (!options.crossDomain) {
        token = $('meta[name="csrf-token"]').attr('content');
        if (token) {
          return jqXHR.setRequestHeader('X-CSRF-Token', token);
        }
      }
    });

    $.ajax({
      type: "DELETE",
      url: "/events/destroy",
      data: {
        id: id
      }
    }).done(function(data){
      alert("削除しました!");
      location.reload();
    }).fail(function(data){
      alert("削除できませんでした。");
    });
  };


  $('#calendar').fullCalendar({
    header: {
      left: 'prev,next today',
      center: 'title',
      right: 'month,agendaWeek,agendaDay'
    },
    navLinks: true,
    selectable: true,
    selectHelper: true,
    displayEventTime: false,
    displayEventEnd: false,
    // イベント登録
    // 選択した日付のstart,endを取得
    select: function(start, end) {
      var title = prompt('イベントを追加');
      var eventData;
      if (title) {
        eventData = {
          title: title,
          start: start,
          end: end
        };
      var str = moment(eventData.start).format('YYYY/MM/DD HH:mm');
      console.log(str);
    //　カレンダーに"evenData"を表示
    $('#calendar').fullCalendar('renderEvent', eventData, true);
　　// 日付選択を解除
    $('#calendar').fullCalendar('unselect');
    //promptで入力したtitleと、selectしたstart,endを引数にcreate_eventを実行
    create_event(title, start, end);
      }
    },
    // イベントをクリックしてプロンプト入力で編集
    eventClick: function(event, element, jsEvent) {
      var editOr = confirm("編集しますか？");
      var initialTitle = event.title;
      var initialStart = event.start;
      var initialEnd = event.end;
      if(editOr) {
        event.title = prompt("イベント名を入力してください。", event.title);
        event.start = prompt("開始時刻を編集", moment(event.start).format('YYYY/MM/DD HH:mm'));
        event.end = prompt("終了時刻を編集", moment(event.end).format('YYYY/MM/DD HH:mm'));

        if (event.title === null || event.start === null || event.end === null) {
          event.title = initialTitle;
          event.start = initialStart;
          event.end = initialEnd;
        }
        $('#calendar').fullCalendar('updateEvent', event);
        update_event(event.id, event.title, event.start, event.end);
      } else {
        var deleteOr = confirm("削除しますか？");
        if(deleteOr) {
          destroy_event(event.id);
        }
      }
    },
    // イベントにマウスオーバーするとイベント情報表示
    eventMouseover: function(event, jsEvent) {
      document.getElementById('event-title-info').textContent = event.title;
      document.getElementById('event-start-info').textContent = moment(event.start).format('YYYY/MM/DD HH:mm');
      document.getElementById('event-end-info').textContent = moment(event.end).format('YYYY/MM/DD HH:mm');
      document.getElementById('event-info-modal').style.display = 'block';

      if(jsEvent.pageX > 800) {
        var leftX = (jsEvent.pageX - 200) + "px";
        document.getElementById('event-info-modal').style.left = leftX;
      } else {
        var leftX = (jsEvent.pageX - 20) + "px";
        document.getElementById('event-info-modal').style.left = leftX;
      }
      if(jsEvent.pageY > 600) {
        var topY = (jsEvent.pageY - 250) + "px";
        document.getElementById('event-info-modal').style.top = topY;
      } else {
        var topY = (jsEvent.pageY + 20) + "px";
        document.getElementById('event-info-modal').style.top = topY;

      }
    },
    // イベントにマウスアウトするとイベント情報表示を閉じる
    eventMouseout: function(event) {
      document.getElementById('event-info-modal').style.display = 'none';
    },

    timezone: 'UTC',
    // イベント情報ファイル
    events: '/events.json',
    editable: true,
  });
});
</script>
